#Test Results (version 2)
#Sat Aug 24 15:07:32 CST 2024
#-----testdescription-----
$file=/home/webliu/TencentKona-17/test/hotspot/jtreg/gc/LRUCacheTest.java
$root=/home/webliu/TencentKona-17/test/hotspot/jtreg
keywords=bug1234567 othervm driver
library=/test/lib
modules=java.base/jdk.internal.misc java.management
run=USER_SPECIFIED build jdk.test.whitebox.WhiteBox\nUSER_SPECIFIED driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\nUSER_SPECIFIED main/othervm -Xbootclasspath/a\:. -XX\:+UnlockDiagnosticVMOptions -XX\:+WhiteBoxAPI -XX\:+UseShenandoahGC -Xlog\:gc* -Xlog\:gc\:shenandoah_gc.log  LRUCacheTest\n
source=LRUCacheTest.java
title=Test LRU Cache with Whitebox API using different GC methods and collect GC logs

#-----environment-----

#-----testresult-----
description=file\:/home/webliu/TencentKona-17/test/hotspot/jtreg/gc/LRUCacheTest.java
elapsed=31782 0\:00\:31.782
end=Sat Aug 24 15\:07\:32 CST 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=qaq.
javatestOS=Linux 5.15.153.1-microsoft-standard-WSL2 (amd64)
javatestVersion=6.0-ea+b24-2024-08-23-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.5 dev 0
modules=java.base/jdk.internal.misc java.management
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build build driver build compile main
start=Sat Aug 24 15\:07\:00 CST 2024
test=gc/LRUCacheTest.java
testJDK=/home/webliu/TencentKona-17/build/linux-x86_64-server-release/jdk
testJDK_OS=[name\:Linux,arch\:amd64,version\:5.15.153.1-microsoft-standard-WSL2,family\:linux,simple_arch\:x64,simple_version\:5.15,processors\:16,maxMemory\:8198123520,maxSwap\:2147483648]
testJDK_os.arch=amd64
testJDK_os.name=Linux
testJDK_os.version=5.15.153.1-microsoft-standard-WSL2
totalTime=31790
user.name=webliu
work=/home/webliu/TencentKona-17/JTwork/gc

#section:script_messages
----------messages:(7/467)----------
JDK under test: /home/webliu/TencentKona-17/build/linux-x86_64-server-release/jdk
openjdk version "17.0.11-internal" 2024-04-16
OpenJDK Runtime Environment (build 17.0.11-internal+0-adhoc.webliu.TencentKona-17)
OpenJDK 64-Bit Server VM (build 17.0.11-internal+0-adhoc.webliu.TencentKona-17, mixed mode)
Library /test/lib; kind: packages
   source directory: /home/webliu/TencentKona-17/test/lib
   class directory: /home/webliu/TencentKona-17/JTwork/classes/test/lib

#section:build
----------messages:(5/218)----------
command: build jdk.test.whitebox.WhiteBox
reason: User specified action: run build jdk.test.whitebox.WhiteBox 
started: Sat Aug 24 15:07:00 CST 2024
finished: Sat Aug 24 15:07:00 CST 2024
elapsed time (seconds): 0.001
result: Passed. All files up to date

#section:build
----------messages:(5/199)----------
command: build jdk.test.lib.helpers.ClassFileInstaller
reason: Named class compiled on demand
started: Sat Aug 24 15:07:00 CST 2024
finished: Sat Aug 24 15:07:00 CST 2024
elapsed time (seconds): 0.0
result: Passed. All files up to date

#section:driver
----------messages:(7/442)----------
command: driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox
reason: User specified action: run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox 
started: Sat Aug 24 15:07:00 CST 2024
Mode: othervm
Additional options from @modules: --add-modules java.base,java.management --add-exports java.base/jdk.internal.misc=ALL-UNNAMED
finished: Sat Aug 24 15:07:00 CST 2024
elapsed time (seconds): 0.168
----------configuration:(4/111)----------
Boot Layer
  add modules: java.base java.management   
  add exports: java.base/jdk.internal.misc ALL-UNNAMED

----------System.out:(0/0)----------
----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(28/1948)*----------
cd /home/webliu/TencentKona-17/JTwork/scratch && \\
DISPLAY=:0 \\
HOME=/home/webliu \\
JTREG_HOME=/home/webliu/jtreg/build/images/jtreg \\
LANG=C.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
WAYLAND_DISPLAY=wayland-0 \\
XDG_RUNTIME_DIR=/mnt/wslg/runtime-dir \\
CLASSPATH=/home/webliu/TencentKona-17/JTwork/classes/gc/LRUCacheTest.d:/home/webliu/TencentKona-17/test/hotspot/jtreg/gc:/home/webliu/TencentKona-17/JTwork/classes/test/lib:/home/webliu/TencentKona-17/test/lib:/home/webliu/jtreg/build/images/jtreg/lib/javatest.jar:/home/webliu/jtreg/build/images/jtreg/lib/jtreg.jar \\
    /home/webliu/TencentKona-17/build/linux-x86_64-server-release/jdk/bin/java \\
        -Dtest.vm.opts= \\
        -Dtest.tool.vm.opts= \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts= \\
        -Dtest.jdk=/home/webliu/TencentKona-17/build/linux-x86_64-server-release/jdk \\
        -Dcompile.jdk=/home/webliu/TencentKona-17/build/linux-x86_64-server-release/jdk \\
        -Dtest.timeout.factor=1.0 \\
        -Dtest.root=/home/webliu/TencentKona-17/test/hotspot/jtreg \\
        -Dtest.name=gc/LRUCacheTest.java \\
        -Dtest.file=/home/webliu/TencentKona-17/test/hotspot/jtreg/gc/LRUCacheTest.java \\
        -Dtest.src=/home/webliu/TencentKona-17/test/hotspot/jtreg/gc \\
        -Dtest.src.path=/home/webliu/TencentKona-17/test/hotspot/jtreg/gc:/home/webliu/TencentKona-17/test/lib \\
        -Dtest.classes=/home/webliu/TencentKona-17/JTwork/classes/gc/LRUCacheTest.d \\
        -Dtest.class.path=/home/webliu/TencentKona-17/JTwork/classes/gc/LRUCacheTest.d:/home/webliu/TencentKona-17/JTwork/classes/test/lib \\
        -Dtest.modules='java.base/jdk.internal.misc java.management' \\
        --add-modules java.base,java.management \\
        --add-exports java.base/jdk.internal.misc=ALL-UNNAMED \\
        com.sun.javatest.regtest.agent.MainWrapper /home/webliu/TencentKona-17/JTwork/gc/LRUCacheTest.d/driver.0.jta jdk.test.whitebox.WhiteBox
result: Passed. Execution successful

#section:build
----------messages:(7/214)----------
command: build LRUCacheTest
reason: Named class compiled on demand
started: Sat Aug 24 15:07:00 CST 2024
Test directory:
  compile: LRUCacheTest
finished: Sat Aug 24 15:07:02 CST 2024
elapsed time (seconds): 1.633
result: Passed. Build successful

#section:compile
----------messages:(7/384)----------
command: compile /home/webliu/TencentKona-17/test/hotspot/jtreg/gc/LRUCacheTest.java
reason: .class file out of date or does not exist
started: Sat Aug 24 15:07:00 CST 2024
Additional options from @modules: --add-modules java.base,java.management --add-exports java.base/jdk.internal.misc=ALL-UNNAMED
Mode: othervm
finished: Sat Aug 24 15:07:02 CST 2024
elapsed time (seconds): 1.632
----------configuration:(9/460)----------
javac compilation environment
  add modules: java.base java.management   
  add exports: java.base/jdk.internal.misc ALL-UNNAMED
  source path: /home/webliu/TencentKona-17/test/hotspot/jtreg/gc 
               /home/webliu/TencentKona-17/test/lib 
  class path:  /home/webliu/TencentKona-17/test/hotspot/jtreg/gc 
               /home/webliu/TencentKona-17/JTwork/classes/gc/LRUCacheTest.d 
               /home/webliu/TencentKona-17/JTwork/classes/test/lib 

----------rerun:(25/1475)*----------
cd /home/webliu/TencentKona-17/JTwork/scratch && \\
DISPLAY=:0 \\
HOME=/home/webliu \\
JTREG_HOME=/home/webliu/jtreg/build/images/jtreg \\
LANG=C.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
WAYLAND_DISPLAY=wayland-0 \\
XDG_RUNTIME_DIR=/mnt/wslg/runtime-dir \\
    /home/webliu/TencentKona-17/build/linux-x86_64-server-release/jdk/bin/javac \\
        -J-Dtest.vm.opts= \\
        -J-Dtest.tool.vm.opts= \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts= \\
        -J-Dtest.jdk=/home/webliu/TencentKona-17/build/linux-x86_64-server-release/jdk \\
        -J-Dcompile.jdk=/home/webliu/TencentKona-17/build/linux-x86_64-server-release/jdk \\
        -J-Dtest.timeout.factor=1.0 \\
        -J-Dtest.root=/home/webliu/TencentKona-17/test/hotspot/jtreg \\
        -J-Dtest.name=gc/LRUCacheTest.java \\
        -J-Dtest.file=/home/webliu/TencentKona-17/test/hotspot/jtreg/gc/LRUCacheTest.java \\
        -J-Dtest.src=/home/webliu/TencentKona-17/test/hotspot/jtreg/gc \\
        -J-Dtest.src.path=/home/webliu/TencentKona-17/test/hotspot/jtreg/gc:/home/webliu/TencentKona-17/test/lib \\
        -J-Dtest.classes=/home/webliu/TencentKona-17/JTwork/classes/gc/LRUCacheTest.d \\
        -J-Dtest.class.path=/home/webliu/TencentKona-17/JTwork/classes/gc/LRUCacheTest.d:/home/webliu/TencentKona-17/JTwork/classes/test/lib \\
        -J-Dtest.modules='java.base/jdk.internal.misc java.management' \\
        @/home/webliu/TencentKona-17/JTwork/gc/LRUCacheTest.d/compile.1.jta
----------System.out:(0/0)----------
----------System.err:(0/0)----------
result: Passed. Compilation successful

#section:main
----------messages:(7/612)----------
command: main -Xbootclasspath/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseShenandoahGC -Xlog:gc* -Xlog:gc:shenandoah_gc.log LRUCacheTest
reason: User specified action: run main/othervm -Xbootclasspath/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseShenandoahGC -Xlog:gc* -Xlog:gc:shenandoah_gc.log LRUCacheTest 
started: Sat Aug 24 15:07:02 CST 2024
Mode: othervm [/othervm specified]
Additional options from @modules: --add-modules java.base,java.management --add-exports java.base/jdk.internal.misc=ALL-UNNAMED
finished: Sat Aug 24 15:07:32 CST 2024
elapsed time (seconds): 29.725
----------configuration:(4/111)----------
Boot Layer
  add modules: java.base java.management   
  add exports: java.base/jdk.internal.misc ALL-UNNAMED

----------System.out:(943/74232)----------
[0.005s][info][gc] Heuristics ergonomically sets -XX:+ExplicitGCInvokesConcurrent
[0.005s][info][gc] Heuristics ergonomically sets -XX:+ShenandoahImplicitGCInvokesConcurrent
[0.005s][info][gc] Using Shenandoah
[0.005s][info][gc,ergo] Pacer for Idle. Initial: 40038K, Alloc Tax Rate: 1.0x
[0.005s][info][gc,init] Version: 17.0.11-internal+0-adhoc.webliu.TencentKona-17 (release)
[0.006s][info][gc,init] CPUs: 16 total, 16 available
[0.006s][info][gc,init] Memory: 7818M
[0.006s][info][gc,init] Large Page Support: Disabled
[0.006s][info][gc,init] NUMA Support: Disabled
[0.006s][info][gc,init] Compressed Oops: Enabled (32-bit)
[0.006s][info][gc,init] Heap Min Capacity: 6656K
[0.006s][info][gc,init] Heap Initial Capacity: 125440K
[0.006s][info][gc,init] Heap Max Capacity: 1955M
[0.006s][info][gc,init] Pre-touch: Disabled
[0.006s][info][gc,init] Mode: Snapshot-At-The-Beginning (SATB)
[0.006s][info][gc,init] Heuristics: Adaptive
[0.006s][info][gc,init] Heap Region Count: 3910
[0.006s][info][gc,init] Heap Region Size: 512K
[0.006s][info][gc,init] TLAB Size Max: 512K
[0.006s][info][gc,init] Humongous Object Threshold: 512K
[0.006s][info][gc,init] Parallel Workers: 8
[0.006s][info][gc,init] Concurrent Workers: 4
[0.006s][info][gc,metaspace] CDS archive(s) not mapped
[0.006s][info][gc,metaspace] Compressed class space mapped at: 0x0000000100000000-0x0000000140000000, reserved size: 1073741824
[0.006s][info][gc,metaspace] Narrow klass base: 0x0000000000000000, Narrow klass shift: 3, Narrow klass range: 0x140000000
Max heap size: 1955.00 MB
Cache size: 1401344
Total operations: 2202112
Operations: 0
Live objects in old region: 1
Operations: 10000
Live objects in old region: 9980
Operations: 20000
Live objects in old region: 19919
Operations: 30000
Live objects in old region: 29807
Operations: 40000
Live objects in old region: 39668
Operations: 50000
Live objects in old region: 49452
Operations: 60000
Live objects in old region: 59180
Operations: 70000
Live objects in old region: 68869
Operations: 80000
Live objects in old region: 78527
Operations: 90000
Live objects in old region: 88148
Operations: 100000
Live objects in old region: 97717
Operations: 110000
Live objects in old region: 107240
Operations: 120000
Live objects in old region: 116725
Operations: 130000
Live objects in old region: 126172
Operations: 140000
Live objects in old region: 135552
Operations: 150000
Live objects in old region: 144929
Operations: 160000
Live objects in old region: 154287
Operations: 170000
Live objects in old region: 163552
Operations: 180000
Live objects in old region: 172758
Operations: 190000
Live objects in old region: 181951
Operations: 200000
Live objects in old region: 191094
Operations: 210000
Live objects in old region: 200194
Operations: 220000
Live objects in old region: 209293
Operations: 230000
Live objects in old region: 218343
Operations: 240000
Live objects in old region: 227272
Operations: 250000
Live objects in old region: 236188
Operations: 260000
Live objects in old region: 245108
Operations: 270000
Live objects in old region: 253960
Operations: 280000
Live objects in old region: 262764
Operations: 290000
Live objects in old region: 271580
Operations: 300000
Live objects in old region: 280318
Operations: 310000
Live objects in old region: 289061
Operations: 320000
Live objects in old region: 297740
Operations: 330000
Live objects in old region: 306379
Operations: 340000
Live objects in old region: 314961
Operations: 350000
Live objects in old region: 323470
Operations: 360000
Live objects in old region: 331993
Operations: 370000
Live objects in old region: 340487
Operations: 380000
Live objects in old region: 348874
Operations: 390000
Live objects in old region: 357250
Operations: 400000
Live objects in old region: 365596
Operations: 410000
Live objects in old region: 373928
Operations: 420000
Live objects in old region: 382201
Operations: 430000
[1.729s][info][gc          ] Trigger: Learning 1 of 5. Free (1367M) is below initial threshold (1368M)
[1.729s][info][gc,ergo     ] Free: 1367M, Max: 512K regular, 1367M humongous, Frag: 0% external, 0% internal; Reserve: 100352K, Max: 512K
[1.730s][info][gc,start    ] GC(0) Concurrent reset
[1.730s][info][gc,task     ] GC(0) Using 4 of 8 workers for concurrent reset
[1.730s][info][gc,ergo     ] GC(0) Pacer for Reset. Non-Taxable: 1955M
[1.731s][info][gc          ] GC(0) Concurrent reset 1.168ms
[1.731s][info][gc,start    ] GC(0) Pause Init Mark (unload classes)
[1.731s][info][gc,task     ] GC(0) Using 8 of 8 workers for init marking
[1.732s][info][gc,ergo     ] GC(0) Pacer for Mark. Expected Live: 195M, Free: 1367M, Non-Taxable: 136M, Alloc Tax Rate: 0.2x
[1.732s][info][gc          ] GC(0) Pause Init Mark (unload classes) 0.668ms
[1.732s][info][gc,start    ] GC(0) Concurrent marking roots
[1.732s][info][gc,task     ] GC(0) Using 4 of 8 workers for concurrent marking roots
[1.732s][info][gc          ] GC(0) Concurrent marking roots 0.316ms
[1.732s][info][gc,start    ] GC(0) Concurrent marking (unload classes)
[1.732s][info][gc,task     ] GC(0) Using 4 of 8 workers for concurrent marking
[1.838s][info][gc          ] GC(0) Concurrent marking (unload classes) 105.983ms
[1.838s][info][gc,start    ] GC(0) Pause Final Mark (unload classes)
[1.838s][info][gc,task     ] GC(0) Using 8 of 8 workers for final marking
[1.839s][info][gc,ergo     ] GC(0) Adaptive CSet Selection. Target Free: 276M, Actual Free: 1467M, Max CSet: 83413K, Min Garbage: 0B
[1.839s][info][gc,ergo     ] GC(0) Collectable Garbage: 9094K (17%), Immediate: 1536K (2%), CSet: 7558K (14%)
[1.839s][info][gc,ergo     ] GC(0) Pacer for Evacuation. Used CSet: 10240K, Free: 1370M, Non-Taxable: 137M, Alloc Tax Rate: 1.1x
[1.839s][info][gc          ] GC(0) Pause Final Mark (unload classes) 0.644ms
[1.839s][info][gc,start    ] GC(0) Concurrent thread roots
[1.839s][info][gc,task     ] GC(0) Using 4 of 8 workers for Concurrent thread roots
[1.839s][info][gc          ] GC(0) Concurrent thread roots 0.172ms
[1.839s][info][gc,start    ] GC(0) Concurrent weak references
[1.839s][info][gc,task     ] GC(0) Using 4 of 8 workers for concurrent weak references
[1.839s][info][gc,ref      ] GC(0) Encountered references: Soft: 148, Weak: 415, Final: 0, Phantom: 78
[1.839s][info][gc,ref      ] GC(0) Discovered  references: Soft: 0, Weak: 325, Final: 0, Phantom: 77
[1.839s][info][gc,ref      ] GC(0) Enqueued    references: Soft: 0, Weak: 109, Final: 0, Phantom: 67
[1.839s][info][gc          ] GC(0) Concurrent weak references 0.198ms
[1.839s][info][gc,start    ] GC(0) Concurrent weak roots
[1.839s][info][gc,task     ] GC(0) Using 4 of 8 workers for concurrent weak root
[1.840s][info][gc          ] GC(0) Concurrent weak roots 0.318ms
[1.840s][info][gc,start    ] GC(0) Concurrent cleanup
[1.840s][info][gc          ] GC(0) Concurrent cleanup 487M->486M(490M) 0.176ms
[1.840s][info][gc,ergo     ] GC(0) Free: 1370M, Max: 512K regular, 1367M humongous, Frag: 1% external, 0% internal; Reserve: 100186K, Max: 512K
[1.840s][info][gc,start    ] GC(0) Concurrent class unloading
[1.840s][info][gc,task     ] GC(0) Using 4 of 8 workers for concurrent class unloading
[1.841s][info][gc          ] GC(0) Concurrent class unloading 0.659ms
[1.841s][info][gc,start    ] GC(0) Concurrent strong roots
[1.841s][info][gc,task     ] GC(0) Using 4 of 8 workers for concurrent strong root
[1.841s][info][gc          ] GC(0) Concurrent strong roots 0.419ms
[1.841s][info][gc,start    ] GC(0) Concurrent evacuation
[1.841s][info][gc,task     ] GC(0) Using 4 of 8 workers for concurrent evacuation
[1.843s][info][gc          ] GC(0) Concurrent evacuation 1.845ms
[1.844s][info][gc,start    ] GC(0) Pause Init Update Refs
[1.844s][info][gc,ergo     ] GC(0) Pacer for Update Refs. Used: 490M, Free: 1370M, Non-Taxable: 137M, Alloc Tax Rate: 1.1x
[1.844s][info][gc          ] GC(0) Pause Init Update Refs 0.040ms
[1.844s][info][gc,start    ] GC(0) Concurrent update references
[1.844s][info][gc,task     ] GC(0) Using 4 of 8 workers for concurrent reference update
[1.863s][info][gc          ] GC(0) Concurrent update references 18.669ms
[1.863s][info][gc,start    ] GC(0) Concurrent update thread roots
[1.863s][info][gc          ] GC(0) Concurrent update thread roots 0.282ms
[1.863s][info][gc,start    ] GC(0) Pause Final Update Refs
[1.863s][info][gc,task     ] GC(0) Using 8 of 8 workers for final reference update
[1.863s][info][gc          ] GC(0) Pause Final Update Refs 0.178ms
[1.863s][info][gc,start    ] GC(0) Concurrent cleanup
[1.864s][info][gc          ] GC(0) Concurrent cleanup 490M->480M(493M) 0.217ms
[1.864s][info][gc,ergo     ] Free: 1376M, Max: 512K regular, 1364M humongous, Frag: 1% external, 0% internal; Reserve: 100352K, Max: 512K
[1.864s][info][gc,stats    ] 
[1.864s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.864s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.864s][info][gc,stats    ] 
[1.864s][info][gc,stats    ] Concurrent Reset                   1225 us
[1.864s][info][gc,stats    ] Pause Init Mark (G)                 785 us
[1.864s][info][gc,stats    ] Pause Init Mark (N)                 693 us
[1.864s][info][gc,stats    ]   Update Region States              162 us
[1.864s][info][gc,stats    ] Concurrent Mark Roots               361 us, parallelism: 1.84x
[1.864s][info][gc,stats    ]   CMR: <total>                      666 us
[1.864s][info][gc,stats    ]   CMR: Thread Roots                 292 us, workers (us):  72, 117,   0, 103, ---, ---, ---, ---, 
[1.864s][info][gc,stats    ]   CMR: VM Strong Roots              170 us, workers (us): 136,  31,   3,   0, ---, ---, ---, ---, 
[1.864s][info][gc,stats    ]   CMR: CLDG Roots                   204 us, workers (us): ---, ---, 201,   3, ---, ---, ---, ---, 
[1.864s][info][gc,stats    ] Concurrent Marking               106069 us
[1.864s][info][gc,stats    ] Pause Final Mark (G)                798 us
[1.864s][info][gc,stats    ] Pause Final Mark (N)                679 us
[1.864s][info][gc,stats    ]   Finish Mark                       388 us
[1.864s][info][gc,stats    ]   Update Region States               99 us
[1.864s][info][gc,stats    ]   Choose Collection Set             115 us
[1.864s][info][gc,stats    ]   Rebuild Free Set                   12 us
[1.864s][info][gc,stats    ] Concurrent Thread Roots             248 us, parallelism: 0.97x
[1.864s][info][gc,stats    ]   CTR: <total>                      240 us
[1.864s][info][gc,stats    ]   CTR: Thread Roots                 240 us, workers (us):  93,  40,  52,  56, ---, ---, ---, ---, 
[1.864s][info][gc,stats    ] Concurrent Weak References          224 us, parallelism: 0.44x
[1.864s][info][gc,stats    ]   CWRF: <total>                      99 us
[1.864s][info][gc,stats    ]   CWRF: Weak References              99 us, workers (us):  28,  63,   8,   0, ---, ---, ---, ---, 
[1.864s][info][gc,stats    ] Concurrent Weak Roots               365 us
[1.864s][info][gc,stats    ]   Roots                             240 us, parallelism: 2.14x
[1.864s][info][gc,stats    ]     CWR: <total>                    512 us
[1.864s][info][gc,stats    ]     CWR: Code Cache Roots           278 us, workers (us): 106, 114,   0,  58, ---, ---, ---, ---, 
[1.864s][info][gc,stats    ]     CWR: VM Weak Roots              219 us, workers (us):  83,  60,  46,  30, ---, ---, ---, ---, 
[1.864s][info][gc,stats    ]     CWR: CLDG Roots                  15 us, workers (us): ---, ---,  15, ---, ---, ---, ---, ---, 
[1.864s][info][gc,stats    ]   Rendezvous                         55 us
[1.864s][info][gc,stats    ] Concurrent Cleanup                  241 us
[1.864s][info][gc,stats    ] Concurrent Class Unloading          733 us
[1.864s][info][gc,stats    ]   Unlink Stale                      445 us
[1.864s][info][gc,stats    ]     System Dictionary                10 us
[1.864s][info][gc,stats    ]     Weak Class Links                  0 us
[1.864s][info][gc,stats    ]     Code Roots                      434 us
[1.864s][info][gc,stats    ]   Rendezvous                         97 us
[1.864s][info][gc,stats    ]   Purge Unlinked                    107 us
[1.864s][info][gc,stats    ]     Code Roots                       85 us
[1.864s][info][gc,stats    ]     CLDG                             21 us
[1.864s][info][gc,stats    ]     Exception Caches                  0 us
[1.864s][info][gc,stats    ] Concurrent Strong Roots             509 us, parallelism: 0.59x
[1.864s][info][gc,stats    ]   CSR: <total>                      300 us
[1.864s][info][gc,stats    ]   CSR: VM Strong Roots               31 us, workers (us):  29,   1,   1,   0, ---, ---, ---, ---, 
[1.864s][info][gc,stats    ]   CSR: CLDG Roots                   269 us, workers (us): 251,  18, ---, ---, ---, ---, ---, ---, 
[1.864s][info][gc,stats    ] Concurrent Evacuation              2428 us
[1.864s][info][gc,stats    ] Pause Init Update Refs (G)          280 us
[1.864s][info][gc,stats    ] Pause Init Update Refs (N)           87 us
[1.864s][info][gc,stats    ]   Manage GCLABs                       4 us
[1.864s][info][gc,stats    ] Concurrent Update Refs            18753 us
[1.864s][info][gc,stats    ] Concurrent Update Thread Roots      330 us
[1.864s][info][gc,stats    ] Pause Final Update Refs (G)         312 us
[1.864s][info][gc,stats    ] Pause Final Update Refs (N)         223 us
[1.864s][info][gc,stats    ]   Update Region States              114 us
[1.864s][info][gc,stats    ]   Trash Collection Set                3 us
[1.864s][info][gc,stats    ]   Rebuild Free Set                   22 us
[1.864s][info][gc,stats    ] Concurrent Cleanup                  264 us
[1.864s][info][gc,stats    ] 
[1.864s][info][gc,stats    ] Allocation pacing accrued:
[1.864s][info][gc,stats    ]       0 of  1858 ms (  0.0%): <total>
[1.864s][info][gc,stats    ]       0 of  1858 ms (  0.0%): <average total>
[1.864s][info][gc,stats    ] 
[1.864s][info][gc,metaspace] Metaspace: 8258K(8448K)->8258K(8448K) NonClass: 7495K(7616K)->7495K(7616K) Class: 762K(832K)->762K(832K)
[1.864s][info][gc,ergo     ] Pacer for Idle. Initial: 40038K, Alloc Tax Rate: 1.0x
Live objects in old region: 390428
[1.873s][info][gc          ] Trigger: Learning 2 of 5. Free (1367M) is below initial threshold (1368M)
[1.873s][info][gc,ergo     ] Free: 1367M, Max: 512K regular, 1359M humongous, Frag: 1% external, 0% internal; Reserve: 100352K, Max: 512K
[1.873s][info][gc,start    ] GC(1) Concurrent reset
[1.873s][info][gc,task     ] GC(1) Using 4 of 8 workers for concurrent reset
[1.873s][info][gc,ergo     ] GC(1) Pacer for Reset. Non-Taxable: 1955M
[1.874s][info][gc          ] GC(1) Concurrent reset 1.645ms
[1.875s][info][gc,start    ] GC(1) Pause Init Mark (unload classes)
[1.875s][info][gc,task     ] GC(1) Using 8 of 8 workers for init marking
[1.875s][info][gc,ergo     ] GC(1) Pacer for Mark. Expected Live: 437M, Free: 1367M, Non-Taxable: 136M, Alloc Tax Rate: 0.4x
[1.875s][info][gc          ] GC(1) Pause Init Mark (unload classes) 0.136ms
[1.875s][info][gc,start    ] GC(1) Concurrent marking roots
[1.875s][info][gc,task     ] GC(1) Using 4 of 8 workers for concurrent marking roots
[1.875s][info][gc          ] GC(1) Concurrent marking roots 0.218ms
[1.875s][info][gc,start    ] GC(1) Concurrent marking (unload classes)
[1.875s][info][gc,task     ] GC(1) Using 4 of 8 workers for concurrent marking
Operations: 440000
[1.938s][info][gc          ] GC(1) Concurrent marking (unload classes) 62.298ms
[1.938s][info][gc,start    ] GC(1) Pause Final Mark (unload classes)
[1.938s][info][gc,task     ] GC(1) Using 8 of 8 workers for final marking
[1.939s][info][gc,ergo     ] GC(1) Adaptive CSet Selection. Target Free: 276M, Actual Free: 1458M, Max CSet: 83413K, Min Garbage: 0B
[1.939s][info][gc,ergo     ] GC(1) Collectable Garbage: 1448K (3%), Immediate: 0B (0%), CSet: 1448K (3%)
[1.939s][info][gc,ergo     ] GC(1) Pacer for Evacuation. Used CSet: 2560K, Free: 1360M, Non-Taxable: 136M, Alloc Tax Rate: 1.1x
[1.939s][info][gc          ] GC(1) Pause Final Mark (unload classes) 0.732ms
[1.939s][info][gc,start    ] GC(1) Concurrent thread roots
[1.939s][info][gc,task     ] GC(1) Using 4 of 8 workers for Concurrent thread roots
[1.939s][info][gc          ] GC(1) Concurrent thread roots 0.174ms
[1.939s][info][gc,start    ] GC(1) Concurrent weak references
[1.939s][info][gc,task     ] GC(1) Using 4 of 8 workers for concurrent weak references
[1.939s][info][gc,ref      ] GC(1) Encountered references: Soft: 148, Weak: 306, Final: 0, Phantom: 11
[1.939s][info][gc,ref      ] GC(1) Discovered  references: Soft: 0, Weak: 172, Final: 0, Phantom: 11
[1.939s][info][gc,ref      ] GC(1) Enqueued    references: Soft: 0, Weak: 0, Final: 0, Phantom: 0
[1.939s][info][gc          ] GC(1) Concurrent weak references 0.082ms
[1.939s][info][gc,start    ] GC(1) Concurrent weak roots
[1.939s][info][gc,task     ] GC(1) Using 4 of 8 workers for concurrent weak root
[1.939s][info][gc          ] GC(1) Concurrent weak roots 0.238ms
[1.939s][info][gc,start    ] GC(1) Concurrent cleanup
[1.940s][info][gc          ] GC(1) Concurrent cleanup 495M->495M(498M) 0.214ms
[1.940s][info][gc,ergo     ] GC(1) Free: 1360M, Max: 512K regular, 1359M humongous, Frag: 1% external, 0% internal; Reserve: 100345K, Max: 512K
[1.940s][info][gc,start    ] GC(1) Concurrent class unloading
[1.940s][info][gc,task     ] GC(1) Using 4 of 8 workers for concurrent class unloading
[1.940s][info][gc          ] GC(1) Concurrent class unloading 0.456ms
[1.940s][info][gc,start    ] GC(1) Concurrent strong roots
[1.940s][info][gc,task     ] GC(1) Using 4 of 8 workers for concurrent strong root
[1.940s][info][gc          ] GC(1) Concurrent strong roots 0.082ms
[1.940s][info][gc,start    ] GC(1) Concurrent evacuation
[1.940s][info][gc,task     ] GC(1) Using 4 of 8 workers for concurrent evacuation
[1.941s][info][gc          ] GC(1) Concurrent evacuation 0.962ms
[1.941s][info][gc,start    ] GC(1) Pause Init Update Refs
[1.941s][info][gc,ergo     ] GC(1) Pacer for Update Refs. Used: 496M, Free: 1360M, Non-Taxable: 136M, Alloc Tax Rate: 1.1x
[1.941s][info][gc          ] GC(1) Pause Init Update Refs 0.030ms
[1.941s][info][gc,start    ] GC(1) Concurrent update references
[1.941s][info][gc,task     ] GC(1) Using 4 of 8 workers for concurrent reference update
[1.955s][info][gc          ] GC(1) Concurrent update references 13.679ms
[1.955s][info][gc,start    ] GC(1) Concurrent update thread roots
[1.955s][info][gc          ] GC(1) Concurrent update thread roots 0.229ms
[1.955s][info][gc,start    ] GC(1) Pause Final Update Refs
[1.956s][info][gc,task     ] GC(1) Using 8 of 8 workers for final reference update
[1.956s][info][gc          ] GC(1) Pause Final Update Refs 0.190ms
[1.956s][info][gc,start    ] GC(1) Concurrent cleanup
[1.956s][info][gc          ] GC(1) Concurrent cleanup 496M->494M(499M) 0.183ms
[1.956s][info][gc,ergo     ] Free: 1361M, Max: 512K regular, 1360M humongous, Frag: 1% external, 0% internal; Reserve: 100352K, Max: 512K
[1.956s][info][gc,stats    ] 
[1.956s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[1.956s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[1.956s][info][gc,stats    ] 
[1.956s][info][gc,stats    ] Concurrent Reset                   1698 us
[1.956s][info][gc,stats    ] Pause Init Mark (G)                 727 us
[1.956s][info][gc,stats    ] Pause Init Mark (N)                 161 us
[1.956s][info][gc,stats    ]   Update Region States               84 us
[1.956s][info][gc,stats    ] Concurrent Mark Roots               256 us, parallelism: 1.23x
[1.956s][info][gc,stats    ]   CMR: <total>                      314 us
[1.956s][info][gc,stats    ]   CMR: Thread Roots                 247 us, workers (us):  70,  77,  64,  36, ---, ---, ---, ---, 
[1.956s][info][gc,stats    ]   CMR: VM Strong Roots               19 us, workers (us):  18,   0,   0,   0, ---, ---, ---, ---, 
[1.956s][info][gc,stats    ]   CMR: CLDG Roots                    48 us, workers (us):  45,   3, ---, ---, ---, ---, ---, ---, 
[1.956s][info][gc,stats    ] Concurrent Marking                62377 us
[1.956s][info][gc,stats    ] Pause Final Mark (G)                996 us
[1.956s][info][gc,stats    ] Pause Final Mark (N)                758 us
[1.956s][info][gc,stats    ]   Finish Mark                       373 us
[1.956s][info][gc,stats    ]   Update Region States              148 us
[1.956s][info][gc,stats    ]   Choose Collection Set             144 us
[1.956s][info][gc,stats    ]   Rebuild Free Set                   21 us
[1.956s][info][gc,stats    ] Concurrent Thread Roots             213 us, parallelism: 0.98x
[1.956s][info][gc,stats    ]   CTR: <total>                      208 us
[1.956s][info][gc,stats    ]   CTR: Thread Roots                 208 us, workers (us):  54,  61,  34,  59, ---, ---, ---, ---, 
[1.956s][info][gc,stats    ] Concurrent Weak References           99 us, parallelism: 0.18x
[1.956s][info][gc,stats    ]   CWRF: <total>                      18 us
[1.956s][info][gc,stats    ]   CWRF: Weak References              18 us, workers (us):  15,   2,   0,   0, ---, ---, ---, ---, 
[1.956s][info][gc,stats    ] Concurrent Weak Roots               276 us
[1.956s][info][gc,stats    ]   Roots                             172 us, parallelism: 1.43x
[1.956s][info][gc,stats    ]     CWR: <total>                    247 us
[1.956s][info][gc,stats    ]     CWR: Code Cache Roots           175 us, workers (us):   0,  52,  61,  62, ---, ---, ---, ---, 
[1.956s][info][gc,stats    ]     CWR: VM Weak Roots               59 us, workers (us):  47,   7,   4,   1, ---, ---, ---, ---, 
[1.956s][info][gc,stats    ]     CWR: CLDG Roots                  12 us, workers (us):  12, ---, ---, ---, ---, ---, ---, ---, 
[1.956s][info][gc,stats    ]   Rendezvous                         57 us
[1.956s][info][gc,stats    ] Concurrent Cleanup                  251 us
[1.956s][info][gc,stats    ] Concurrent Class Unloading          492 us
[1.956s][info][gc,stats    ]   Unlink Stale                      326 us
[1.956s][info][gc,stats    ]     System Dictionary                 9 us
[1.956s][info][gc,stats    ]     Weak Class Links                  0 us
[1.956s][info][gc,stats    ]     Code Roots                      315 us
[1.956s][info][gc,stats    ]   Rendezvous                         59 us
[1.956s][info][gc,stats    ]   Purge Unlinked                     62 us
[1.956s][info][gc,stats    ]     Code Roots                       50 us
[1.956s][info][gc,stats    ]     CLDG                             12 us
[1.956s][info][gc,stats    ]     Exception Caches                  0 us
[1.956s][info][gc,stats    ] Concurrent Strong Roots             114 us, parallelism: 0.20x
[1.956s][info][gc,stats    ]   CSR: <total>                       23 us
[1.956s][info][gc,stats    ]   CSR: VM Strong Roots                2 us, workers (us):   2,   0,   0,   0, ---, ---, ---, ---, 
[1.956s][info][gc,stats    ]   CSR: CLDG Roots                    21 us, workers (us):  19,   3, ---, ---, ---, ---, ---, ---, 
[1.956s][info][gc,stats    ] Concurrent Evacuation              1000 us
[1.956s][info][gc,stats    ] Pause Init Update Refs (G)          200 us
[1.956s][info][gc,stats    ] Pause Init Update Refs (N)           54 us
[1.956s][info][gc,stats    ]   Manage GCLABs                       2 us
[1.956s][info][gc,stats    ] Concurrent Update Refs            13762 us
[1.956s][info][gc,stats    ] Concurrent Update Thread Roots      277 us
[1.956s][info][gc,stats    ] Pause Final Update Refs (G)         324 us
[1.956s][info][gc,stats    ] Pause Final Update Refs (N)         244 us
[1.956s][info][gc,stats    ]   Update Region States              111 us
[1.956s][info][gc,stats    ]   Trash Collection Set                3 us
[1.956s][info][gc,stats    ]   Rebuild Free Set                   46 us
[1.956s][info][gc,stats    ] Concurrent Cleanup                  223 us
[1.956s][info][gc,stats    ] 
[1.956s][info][gc,stats    ] Allocation pacing accrued:
[1.956s][info][gc,stats    ]       0 of    92 ms (  0.0%): <total>
[1.956s][info][gc,stats    ]       0 of    92 ms (  0.0%): <average total>
[1.956s][info][gc,stats    ] 
[1.956s][info][gc,metaspace] Metaspace: 8258K(8448K)->8258K(8448K) NonClass: 7495K(7616K)->7495K(7616K) Class: 762K(832K)->762K(832K)
[1.956s][info][gc,ergo     ] Pacer for Idle. Initial: 40038K, Alloc Tax Rate: 1.0x
[1.957s][info][gc          ] Trigger: Learning 3 of 5. Free (1361M) is below initial threshold (1368M)
[1.957s][info][gc,ergo     ] Free: 1361M, Max: 512K regular, 1360M humongous, Frag: 1% external, 0% internal; Reserve: 100352K, Max: 512K
[1.957s][info][gc,start    ] GC(2) Concurrent reset
[1.957s][info][gc,task     ] GC(2) Using 4 of 8 workers for concurrent reset
[1.958s][info][gc,ergo     ] GC(2) Pacer for Reset. Non-Taxable: 1955M
[1.958s][info][gc          ] GC(2) Concurrent reset 1.007ms
[1.959s][info][gc,start    ] GC(2) Pause Init Mark (unload classes)
[1.959s][info][gc,task     ] GC(2) Using 8 of 8 workers for init marking
[1.959s][info][gc,ergo     ] GC(2) Pacer for Mark. Expected Live: 440M, Free: 1361M, Non-Taxable: 136M, Alloc Tax Rate: 0.4x
[1.959s][info][gc          ] GC(2) Pause Init Mark (unload classes) 0.140ms
[1.959s][info][gc,start    ] GC(2) Concurrent marking roots
[1.959s][info][gc,task     ] GC(2) Using 4 of 8 workers for concurrent marking roots
[1.959s][info][gc          ] GC(2) Concurrent marking roots 0.178ms
[1.959s][info][gc,start    ] GC(2) Concurrent marking (unload classes)
[1.959s][info][gc,task     ] GC(2) Using 4 of 8 workers for concurrent marking
Live objects in old region: 398628
Operations: 450000
[2.018s][info][gc          ] GC(2) Concurrent marking (unload classes) 58.961ms
[2.018s][info][gc,start    ] GC(2) Pause Final Mark (unload classes)
[2.018s][info][gc,task     ] GC(2) Using 8 of 8 workers for final marking
[2.019s][info][gc,ergo     ] GC(2) Adaptive CSet Selection. Target Free: 276M, Actual Free: 1450M, Max CSet: 83413K, Min Garbage: 0B
[2.019s][info][gc,ergo     ] GC(2) Collectable Garbage: 2813K (5%), Immediate: 2048K (4%), CSet: 765K (1%)
[2.019s][info][gc,ergo     ] GC(2) Pacer for Evacuation. Used CSet: 1536K, Free: 1352M, Non-Taxable: 135M, Alloc Tax Rate: 1.1x
[2.019s][info][gc          ] GC(2) Pause Final Mark (unload classes) 0.539ms
[2.019s][info][gc,start    ] GC(2) Concurrent thread roots
[2.019s][info][gc,task     ] GC(2) Using 4 of 8 workers for Concurrent thread roots
[2.019s][info][gc          ] GC(2) Concurrent thread roots 0.146ms
[2.019s][info][gc,start    ] GC(2) Concurrent weak references
[2.019s][info][gc,task     ] GC(2) Using 4 of 8 workers for concurrent weak references
[2.019s][info][gc,ref      ] GC(2) Encountered references: Soft: 148, Weak: 306, Final: 0, Phantom: 11
[2.019s][info][gc,ref      ] GC(2) Discovered  references: Soft: 0, Weak: 156, Final: 0, Phantom: 11
[2.019s][info][gc,ref      ] GC(2) Enqueued    references: Soft: 0, Weak: 0, Final: 0, Phantom: 0
[2.019s][info][gc          ] GC(2) Concurrent weak references 0.098ms
[2.019s][info][gc,start    ] GC(2) Concurrent weak roots
[2.019s][info][gc,task     ] GC(2) Using 4 of 8 workers for concurrent weak root
[2.019s][info][gc          ] GC(2) Concurrent weak roots 0.243ms
[2.019s][info][gc,start    ] GC(2) Concurrent cleanup
[2.020s][info][gc          ] GC(2) Concurrent cleanup 505M->503M(509M) 0.203ms
[2.020s][info][gc,ergo     ] GC(2) Free: 1352M, Max: 512K regular, 1350M humongous, Frag: 1% external, 0% internal; Reserve: 100337K, Max: 512K
[2.020s][info][gc,start    ] GC(2) Concurrent class unloading
[2.020s][info][gc,task     ] GC(2) Using 4 of 8 workers for concurrent class unloading
[2.020s][info][gc          ] GC(2) Concurrent class unloading 0.507ms
[2.020s][info][gc,start    ] GC(2) Concurrent strong roots
[2.020s][info][gc,task     ] GC(2) Using 4 of 8 workers for concurrent strong root
[2.020s][info][gc          ] GC(2) Concurrent strong roots 0.128ms
[2.020s][info][gc,start    ] GC(2) Concurrent evacuation
[2.020s][info][gc,task     ] GC(2) Using 4 of 8 workers for concurrent evacuation
[2.021s][info][gc          ] GC(2) Concurrent evacuation 0.748ms
[2.021s][info][gc,start    ] GC(2) Pause Init Update Refs
[2.021s][info][gc,ergo     ] GC(2) Pacer for Update Refs. Used: 504M, Free: 1352M, Non-Taxable: 135M, Alloc Tax Rate: 1.1x
[2.021s][info][gc          ] GC(2) Pause Init Update Refs 0.038ms
[2.021s][info][gc,start    ] GC(2) Concurrent update references
[2.021s][info][gc,task     ] GC(2) Using 4 of 8 workers for concurrent reference update
[2.037s][info][gc          ] GC(2) Concurrent update references 15.543ms
[2.037s][info][gc,start    ] GC(2) Concurrent update thread roots
[2.037s][info][gc          ] GC(2) Concurrent update thread roots 0.251ms
[2.037s][info][gc,start    ] GC(2) Pause Final Update Refs
[2.037s][info][gc,task     ] GC(2) Using 8 of 8 workers for final reference update
[2.038s][info][gc          ] GC(2) Pause Final Update Refs 0.178ms
[2.038s][info][gc,start    ] GC(2) Concurrent cleanup
[2.038s][info][gc          ] GC(2) Concurrent cleanup 504M->503M(509M) 0.191ms
[2.038s][info][gc,ergo     ] Free: 1352M, Max: 512K regular, 1349M humongous, Frag: 1% external, 0% internal; Reserve: 100352K, Max: 512K
[2.038s][info][gc,stats    ] 
[2.038s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[2.038s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[2.038s][info][gc,stats    ] 
[2.038s][info][gc,stats    ] Concurrent Reset                   1048 us
[2.038s][info][gc,stats    ] Pause Init Mark (G)                 307 us
[2.038s][info][gc,stats    ] Pause Init Mark (N)                 163 us
[2.038s][info][gc,stats    ]   Update Region States               94 us
[2.038s][info][gc,stats    ] Concurrent Mark Roots               213 us, parallelism: 0.98x
[2.038s][info][gc,stats    ]   CMR: <total>                      208 us
[2.038s][info][gc,stats    ]   CMR: Thread Roots                 170 us, workers (us):  37,  42,  61,  30, ---, ---, ---, ---, 
[2.038s][info][gc,stats    ]   CMR: VM Strong Roots                3 us, workers (us):   3,   0,   0,   0, ---, ---, ---, ---, 
[2.038s][info][gc,stats    ]   CMR: CLDG Roots                    35 us, workers (us):  32,   3, ---, ---, ---, ---, ---, ---, 
[2.038s][info][gc,stats    ] Concurrent Marking                59026 us
[2.038s][info][gc,stats    ] Pause Final Mark (G)                643 us
[2.038s][info][gc,stats    ] Pause Final Mark (N)                562 us
[2.038s][info][gc,stats    ]   Finish Mark                       257 us
[2.038s][info][gc,stats    ]   Update Region States               94 us
[2.038s][info][gc,stats    ]   Choose Collection Set             116 us
[2.038s][info][gc,stats    ]   Rebuild Free Set                   12 us
[2.038s][info][gc,stats    ] Concurrent Thread Roots             196 us, parallelism: 1.15x
[2.038s][info][gc,stats    ]   CTR: <total>                      224 us
[2.038s][info][gc,stats    ]   CTR: Thread Roots                 224 us, workers (us):  55,  74,  43,  52, ---, ---, ---, ---, 
[2.038s][info][gc,stats    ] Concurrent Weak References          127 us, parallelism: 0.13x
[2.038s][info][gc,stats    ]   CWRF: <total>                      17 us
[2.038s][info][gc,stats    ]   CWRF: Weak References              17 us, workers (us):  16,   0,   0,   0, ---, ---, ---, ---, 
[2.038s][info][gc,stats    ] Concurrent Weak Roots               283 us
[2.038s][info][gc,stats    ]   Roots                             172 us, parallelism: 1.50x
[2.038s][info][gc,stats    ]     CWR: <total>                    259 us
[2.038s][info][gc,stats    ]     CWR: Code Cache Roots           207 us, workers (us):  85,  52,  70,   0, ---, ---, ---, ---, 
[2.038s][info][gc,stats    ]     CWR: VM Weak Roots               41 us, workers (us):  24,  16,   1,   1, ---, ---, ---, ---, 
[2.038s][info][gc,stats    ]     CWR: CLDG Roots                  11 us, workers (us): ---,  11, ---, ---, ---, ---, ---, ---, 
[2.038s][info][gc,stats    ]   Rendezvous                         49 us
[2.038s][info][gc,stats    ] Concurrent Cleanup                  240 us
[2.038s][info][gc,stats    ] Concurrent Class Unloading          545 us
[2.038s][info][gc,stats    ]   Unlink Stale                      324 us
[2.038s][info][gc,stats    ]     System Dictionary                 7 us
[2.038s][info][gc,stats    ]     Weak Class Links                  0 us
[2.038s][info][gc,stats    ]     Code Roots                      315 us
[2.038s][info][gc,stats    ]   Rendezvous                        107 us
[2.038s][info][gc,stats    ]   Purge Unlinked                     67 us
[2.038s][info][gc,stats    ]     Code Roots                       53 us
[2.038s][info][gc,stats    ]     CLDG                             13 us
[2.038s][info][gc,stats    ]     Exception Caches                  0 us
[2.038s][info][gc,stats    ] Concurrent Strong Roots             181 us, parallelism: 0.18x
[2.038s][info][gc,stats    ]   CSR: <total>                       33 us
[2.038s][info][gc,stats    ]   CSR: VM Strong Roots                2 us, workers (us):   2,   0,   0,   0, ---, ---, ---, ---, 
[2.03

...
Output overflow:
JT Harness has limited the test output to the text
at the beginning and the end, so that you can see how the
test began, and how it completed.

If you need to see more of the output from the test,
set the system property javatest.maxOutputSize to a higher
value. The current value is 100000
...

         320 us
[28.933s][info][gc,stats    ]   Roots                             198 us, parallelism: 1.54x
[28.933s][info][gc,stats    ]     CWR: <total>                    306 us
[28.933s][info][gc,stats    ]     CWR: Code Cache Roots           163 us, workers (us):  54,  56,  53,   0, ---, ---, ---, ---, 
[28.933s][info][gc,stats    ]     CWR: VM Weak Roots              132 us, workers (us):  62,  43,  26,   1, ---, ---, ---, ---, 
[28.933s][info][gc,stats    ]     CWR: CLDG Roots                  11 us, workers (us): ---,  11, ---, ---, ---, ---, ---, ---, 
[28.933s][info][gc,stats    ]   Rendezvous                         54 us
[28.933s][info][gc,stats    ] Concurrent Cleanup                  211 us
[28.933s][info][gc,stats    ] Concurrent Class Unloading          446 us
[28.933s][info][gc,stats    ]   Unlink Stale                      289 us
[28.933s][info][gc,stats    ]     System Dictionary                 8 us
[28.933s][info][gc,stats    ]     Weak Class Links                  0 us
[28.933s][info][gc,stats    ]     Code Roots                      280 us
[28.933s][info][gc,stats    ]   Rendezvous                         45 us
[28.933s][info][gc,stats    ]   Purge Unlinked                     73 us
[28.933s][info][gc,stats    ]     Code Roots                       61 us
[28.933s][info][gc,stats    ]     CLDG                             12 us
[28.933s][info][gc,stats    ]     Exception Caches                  0 us
[28.933s][info][gc,stats    ] Concurrent Strong Roots             155 us, parallelism: 0.53x
[28.933s][info][gc,stats    ]   CSR: <total>                       81 us
[28.933s][info][gc,stats    ]   CSR: VM Strong Roots               15 us, workers (us):  10,   4,   0,   0, ---, ---, ---, ---, 
[28.933s][info][gc,stats    ]   CSR: CLDG Roots                    66 us, workers (us):  11,  56, ---, ---, ---, ---, ---, ---, 
[28.933s][info][gc,stats    ] Concurrent Evacuation              8041 us
[28.933s][info][gc,stats    ] Pause Init Update Refs (G)          269 us
[28.933s][info][gc,stats    ] Pause Init Update Refs (N)           65 us
[28.933s][info][gc,stats    ]   Manage GCLABs                       2 us
[28.933s][info][gc,stats    ] Concurrent Update Refs            44328 us
[28.933s][info][gc,stats    ] Concurrent Update Thread Roots      324 us
[28.933s][info][gc,stats    ] Pause Final Update Refs (G)         318 us
[28.933s][info][gc,stats    ] Pause Final Update Refs (N)         228 us
[28.933s][info][gc,stats    ]   Update Region States              123 us
[28.933s][info][gc,stats    ]   Trash Collection Set                7 us
[28.933s][info][gc,stats    ]   Rebuild Free Set                   29 us
[28.933s][info][gc,stats    ] Concurrent Cleanup                  287 us
[28.933s][info][gc,stats    ] 
[28.933s][info][gc,stats    ] Allocation pacing accrued:
[28.933s][info][gc,stats    ]       0 of   298 ms (  0.0%): <total>
[28.933s][info][gc,stats    ]       0 of   298 ms (  0.0%): <average total>
[28.933s][info][gc,stats    ] 
[28.933s][info][gc,metaspace] Metaspace: 8290K(8512K)->8290K(8512K) NonClass: 7528K(7680K)->7528K(7680K) Class: 762K(832K)->762K(832K)
[28.933s][info][gc,ergo     ] Pacer for Idle. Initial: 40038K, Alloc Tax Rate: 1.0x
[28.934s][info][gc          ] Trigger: Free (178M) is below minimum threshold (195M)
[28.934s][info][gc,ergo     ] Free: 178M, Max: 512K regular, 58368K humongous, Frag: 68% external, 2% internal; Reserve: 100352K, Max: 512K
[28.934s][info][gc,start    ] GC(34) Concurrent reset
[28.934s][info][gc,task     ] GC(34) Using 4 of 8 workers for concurrent reset
[28.934s][info][gc,ergo     ] GC(34) Pacer for Reset. Non-Taxable: 1955M
[28.938s][info][gc          ] GC(34) Concurrent reset 3.336ms
[28.938s][info][gc,start    ] GC(34) Pause Init Mark (unload classes)
[28.938s][info][gc,task     ] GC(34) Using 8 of 8 workers for init marking
[28.938s][info][gc,ergo     ] GC(34) Pacer for Mark. Expected Live: 1521M, Free: 178M, Non-Taxable: 18303K, Alloc Tax Rate: 10.4x
[28.938s][info][gc          ] GC(34) Pause Init Mark (unload classes) 0.156ms
[28.938s][info][gc,start    ] GC(34) Concurrent marking roots
[28.938s][info][gc,task     ] GC(34) Using 4 of 8 workers for concurrent marking roots
[28.938s][info][gc          ] GC(34) Concurrent marking roots 0.195ms
[28.938s][info][gc,start    ] GC(34) Concurrent marking (unload classes)
[28.938s][info][gc,task     ] GC(34) Using 4 of 8 workers for concurrent marking
Live objects in old region: 1386981
Operations: 2200000
[29.183s][info][gc          ] GC(34) Concurrent marking (unload classes) 245.048ms
[29.184s][info][gc,start    ] GC(34) Pause Final Mark (unload classes)
[29.184s][info][gc,task     ] GC(34) Using 8 of 8 workers for final marking
[29.184s][info][gc,ergo     ] GC(34) Adaptive CSet Selection. Target Free: 276M, Actual Free: 265M, Max CSet: 83413K, Min Garbage: 11733K
[29.184s][info][gc,ergo     ] GC(34) Collectable Garbage: 11733K (7%), Immediate: 0B (0%), CSet: 11733K (7%)
[29.184s][info][gc,ergo     ] GC(34) Pacer for Evacuation. Used CSet: 73728K, Free: 168M, Non-Taxable: 17228K, Alloc Tax Rate: 1.1x
[29.184s][info][gc          ] GC(34) Pause Final Mark (unload classes) 0.937ms
[29.185s][info][gc,start    ] GC(34) Concurrent thread roots
[29.185s][info][gc,task     ] GC(34) Using 4 of 8 workers for Concurrent thread roots
[29.185s][info][gc          ] GC(34) Concurrent thread roots 0.171ms
[29.185s][info][gc,start    ] GC(34) Concurrent weak references
[29.185s][info][gc,task     ] GC(34) Using 4 of 8 workers for concurrent weak references
[29.185s][info][gc,ref      ] GC(34) Encountered references: Soft: 148, Weak: 306, Final: 0, Phantom: 11
[29.185s][info][gc,ref      ] GC(34) Discovered  references: Soft: 0, Weak: 8, Final: 0, Phantom: 6
[29.185s][info][gc,ref      ] GC(34) Enqueued    references: Soft: 0, Weak: 0, Final: 0, Phantom: 0
[29.185s][info][gc          ] GC(34) Concurrent weak references 0.099ms
[29.185s][info][gc,start    ] GC(34) Concurrent weak roots
[29.185s][info][gc,task     ] GC(34) Using 4 of 8 workers for concurrent weak root
[29.185s][info][gc          ] GC(34) Concurrent weak roots 0.239ms
[29.185s][info][gc,start    ] GC(34) Concurrent cleanup
[29.185s][info][gc          ] GC(34) Concurrent cleanup 1687M->1687M(1955M) 0.208ms
[29.185s][info][gc,ergo     ] GC(34) Free: 168M, Max: 512K regular, 58368K humongous, Frag: 66% external, 2% internal; Reserve: 100223K, Max: 512K
[29.185s][info][gc,start    ] GC(34) Concurrent class unloading
[29.185s][info][gc,task     ] GC(34) Using 4 of 8 workers for concurrent class unloading
[29.186s][info][gc          ] GC(34) Concurrent class unloading 0.584ms
[29.186s][info][gc,start    ] GC(34) Concurrent strong roots
[29.186s][info][gc,task     ] GC(34) Using 4 of 8 workers for concurrent strong root
[29.186s][info][gc          ] GC(34) Concurrent strong roots 0.112ms
[29.186s][info][gc,start    ] GC(34) Concurrent evacuation
[29.186s][info][gc,task     ] GC(34) Using 4 of 8 workers for concurrent evacuation
[29.195s][info][gc          ] GC(34) Concurrent evacuation 8.920ms
[29.195s][info][gc,start    ] GC(34) Pause Init Update Refs
[29.195s][info][gc,ergo     ] GC(34) Pacer for Update Refs. Used: 1749M, Free: 168M, Non-Taxable: 17228K, Alloc Tax Rate: 12.7x
[29.195s][info][gc          ] GC(34) Pause Init Update Refs 0.031ms
[29.195s][info][gc,start    ] GC(34) Concurrent update references
[29.195s][info][gc,task     ] GC(34) Using 4 of 8 workers for concurrent reference update
[29.240s][info][gc          ] GC(34) Concurrent update references 44.351ms
[29.240s][info][gc,start    ] GC(34) Concurrent update thread roots
[29.240s][info][gc          ] GC(34) Concurrent update thread roots 0.411ms
[29.240s][info][gc,start    ] GC(34) Pause Final Update Refs
[29.240s][info][gc,task     ] GC(34) Using 8 of 8 workers for final reference update
[29.241s][info][gc          ] GC(34) Pause Final Update Refs 0.232ms
[29.241s][info][gc,start    ] GC(34) Concurrent cleanup
[29.241s][info][gc          ] GC(34) Concurrent cleanup 1749M->1677M(1955M) 0.187ms
[29.241s][info][gc,ergo     ] Free: 178M, Max: 512K regular, 58368K humongous, Frag: 68% external, 2% internal; Reserve: 100352K, Max: 512K
[29.241s][info][gc,stats    ] 
[29.241s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[29.241s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[29.241s][info][gc,stats    ] 
[29.241s][info][gc,stats    ] Concurrent Reset                   3391 us
[29.241s][info][gc,stats    ] Pause Init Mark (G)                 353 us
[29.241s][info][gc,stats    ] Pause Init Mark (N)                 179 us
[29.241s][info][gc,stats    ]   Update Region States              103 us
[29.241s][info][gc,stats    ] Concurrent Mark Roots               233 us, parallelism: 0.88x
[29.241s][info][gc,stats    ]   CMR: <total>                      205 us
[29.241s][info][gc,stats    ]   CMR: Thread Roots                 168 us, workers (us):  33,  46,  60,  29, ---, ---, ---, ---, 
[29.241s][info][gc,stats    ]   CMR: VM Strong Roots                4 us, workers (us):   3,   0,   0,   0, ---, ---, ---, ---, 
[29.241s][info][gc,stats    ]   CMR: CLDG Roots                    33 us, workers (us):  30,   3, ---, ---, ---, ---, ---, ---, 
[29.241s][info][gc,stats    ] Concurrent Marking               245145 us
[29.241s][info][gc,stats    ] Pause Final Mark (G)               1157 us
[29.241s][info][gc,stats    ] Pause Final Mark (N)                965 us
[29.241s][info][gc,stats    ]   Finish Mark                       459 us
[29.241s][info][gc,stats    ]   Update Region States               95 us
[29.241s][info][gc,stats    ]   Choose Collection Set             311 us
[29.241s][info][gc,stats    ]   Rebuild Free Set                   17 us
[29.241s][info][gc,stats    ] Concurrent Thread Roots             239 us, parallelism: 0.83x
[29.241s][info][gc,stats    ]   CTR: <total>                      198 us
[29.241s][info][gc,stats    ]   CTR: Thread Roots                 198 us, workers (us):  50,  74,  33,  41, ---, ---, ---, ---, 
[29.241s][info][gc,stats    ] Concurrent Weak References          105 us, parallelism: 0.18x
[29.241s][info][gc,stats    ]   CWRF: <total>                      19 us
[29.241s][info][gc,stats    ]   CWRF: Weak References              19 us, workers (us):  19,   0,   0,   0, ---, ---, ---, ---, 
[29.241s][info][gc,stats    ] Concurrent Weak Roots               281 us
[29.241s][info][gc,stats    ]   Roots                             178 us, parallelism: 1.77x
[29.241s][info][gc,stats    ]     CWR: <total>                    314 us
[29.241s][info][gc,stats    ]     CWR: Code Cache Roots           257 us, workers (us):   0,  93,  96,  68, ---, ---, ---, ---, 
[29.241s][info][gc,stats    ]     CWR: VM Weak Roots               44 us, workers (us):  29,  14,   0,   1, ---, ---, ---, ---, 
[29.241s][info][gc,stats    ]     CWR: CLDG Roots                  13 us, workers (us):  13, ---, ---, ---, ---, ---, ---, ---, 
[29.241s][info][gc,stats    ]   Rendezvous                         55 us
[29.241s][info][gc,stats    ] Concurrent Cleanup                  248 us
[29.241s][info][gc,stats    ] Concurrent Class Unloading          620 us
[29.241s][info][gc,stats    ]   Unlink Stale                      452 us
[29.241s][info][gc,stats    ]     System Dictionary                 7 us
[29.241s][info][gc,stats    ]     Weak Class Links                  0 us
[29.241s][info][gc,stats    ]     Code Roots                      444 us
[29.241s][info][gc,stats    ]   Rendezvous                         62 us
[29.241s][info][gc,stats    ]   Purge Unlinked                     62 us
[29.241s][info][gc,stats    ]     Code Roots                       49 us
[29.241s][info][gc,stats    ]     CLDG                             13 us
[29.241s][info][gc,stats    ]     Exception Caches                  0 us
[29.241s][info][gc,stats    ] Concurrent Strong Roots             145 us, parallelism: 0.21x
[29.241s][info][gc,stats    ]   CSR: <total>                       30 us
[29.241s][info][gc,stats    ]   CSR: VM Strong Roots                2 us, workers (us):   2,   0,   0,   0, ---, ---, ---, ---, 
[29.241s][info][gc,stats    ]   CSR: CLDG Roots                    28 us, workers (us):  26,   2, ---, ---, ---, ---, ---, ---, 
[29.241s][info][gc,stats    ] Concurrent Evacuation              8999 us
[29.241s][info][gc,stats    ] Pause Init Update Refs (G)          216 us
[29.241s][info][gc,stats    ] Pause Init Update Refs (N)           51 us
[29.241s][info][gc,stats    ]   Manage GCLABs                       5 us
[29.241s][info][gc,stats    ] Concurrent Update Refs            44433 us
[29.241s][info][gc,stats    ] Concurrent Update Thread Roots      469 us
[29.241s][info][gc,stats    ] Pause Final Update Refs (G)         363 us
[29.241s][info][gc,stats    ] Pause Final Update Refs (N)         279 us
[29.241s][info][gc,stats    ]   Update Region States              143 us
[29.241s][info][gc,stats    ]   Trash Collection Set                7 us
[29.241s][info][gc,stats    ]   Rebuild Free Set                   32 us
[29.241s][info][gc,stats    ] Concurrent Cleanup                  235 us
[29.241s][info][gc,stats    ] 
[29.241s][info][gc,stats    ] Allocation pacing accrued:
[29.241s][info][gc,stats    ]       0 of   308 ms (  0.0%): <total>
[29.241s][info][gc,stats    ]       0 of   308 ms (  0.0%): <average total>
[29.241s][info][gc,stats    ] 
[29.241s][info][gc,metaspace] Metaspace: 8290K(8512K)->8290K(8512K) NonClass: 7528K(7680K)->7528K(7680K) Class: 762K(832K)->762K(832K)
[29.241s][info][gc,ergo     ] Pacer for Idle. Initial: 40038K, Alloc Tax Rate: 1.0x
[29.242s][info][gc          ] Trigger: Free (178M) is below minimum threshold (195M)
[29.242s][info][gc,ergo     ] Free: 178M, Max: 512K regular, 58368K humongous, Frag: 68% external, 2% internal; Reserve: 100352K, Max: 512K
[29.242s][info][gc,start    ] GC(35) Concurrent reset
[29.242s][info][gc,task     ] GC(35) Using 4 of 8 workers for concurrent reset
[29.242s][info][gc,ergo     ] GC(35) Pacer for Reset. Non-Taxable: 1955M
[29.246s][info][gc          ] GC(35) Concurrent reset 3.709ms
[29.246s][info][gc,start    ] GC(35) Pause Init Mark (unload classes)
[29.246s][info][gc,task     ] GC(35) Using 8 of 8 workers for init marking
[29.246s][info][gc,ergo     ] GC(35) Pacer for Mark. Expected Live: 1525M, Free: 178M, Non-Taxable: 18252K, Alloc Tax Rate: 10.5x
[29.246s][info][gc          ] GC(35) Pause Init Mark (unload classes) 0.179ms
[29.247s][info][gc,start    ] GC(35) Concurrent marking roots
[29.247s][info][gc,task     ] GC(35) Using 4 of 8 workers for concurrent marking roots
[29.247s][info][gc          ] GC(35) Concurrent marking roots 0.224ms
[29.247s][info][gc,start    ] GC(35) Concurrent marking (unload classes)
[29.247s][info][gc,task     ] GC(35) Using 4 of 8 workers for concurrent marking
Live objects in old region: 1390651
Final check:
[29.521s][info][gc          ] GC(35) Concurrent marking (unload classes) 274.032ms
[29.521s][info][gc,start    ] GC(35) Pause Final Mark (unload classes)
[29.521s][info][gc,task     ] GC(35) Using 8 of 8 workers for final marking
[29.522s][info][gc,ergo     ] GC(35) Adaptive CSet Selection. Target Free: 276M, Actual Free: 273M, Max CSet: 83413K, Min Garbage: 4053K
[29.522s][info][gc,ergo     ] GC(35) Collectable Garbage: 4053K (2%), Immediate: 0B (0%), CSet: 4053K (2%)
[29.522s][info][gc,ergo     ] GC(35) Pacer for Evacuation. Used CSet: 19968K, Free: 175M, Non-Taxable: 17996K, Alloc Tax Rate: 1.1x
[29.522s][info][gc          ] GC(35) Pause Final Mark (unload classes) 0.780ms
[29.522s][info][gc,start    ] GC(35) Concurrent thread roots
[29.522s][info][gc,task     ] GC(35) Using 4 of 8 workers for Concurrent thread roots
[29.522s][info][gc          ] GC(35) Concurrent thread roots 0.245ms
[29.522s][info][gc,start    ] GC(35) Concurrent weak references
[29.522s][info][gc,task     ] GC(35) Using 4 of 8 workers for concurrent weak references
[29.522s][info][gc,ref      ] GC(35) Encountered references: Soft: 148, Weak: 306, Final: 0, Phantom: 11
[29.522s][info][gc,ref      ] GC(35) Discovered  references: Soft: 0, Weak: 156, Final: 0, Phantom: 11
[29.522s][info][gc,ref      ] GC(35) Enqueued    references: Soft: 0, Weak: 0, Final: 0, Phantom: 0
[29.522s][info][gc          ] GC(35) Concurrent weak references 0.104ms
[29.522s][info][gc,start    ] GC(35) Concurrent weak roots
[29.522s][info][gc,task     ] GC(35) Using 4 of 8 workers for concurrent weak root
[29.523s][info][gc          ] GC(35) Concurrent weak roots 0.245ms
[29.523s][info][gc,start    ] GC(35) Concurrent cleanup
[29.523s][info][gc          ] GC(35) Concurrent cleanup 1680M->1680M(1955M) 0.193ms
[29.523s][info][gc,ergo     ] GC(35) Free: 175M, Max: 512K regular, 58368K humongous, Frag: 68% external, 2% internal; Reserve: 100289K, Max: 512K
[29.523s][info][gc,start    ] GC(35) Concurrent class unloading
[29.523s][info][gc,task     ] GC(35) Using 4 of 8 workers for concurrent class unloading
[29.523s][info][gc          ] GC(35) Concurrent class unloading 0.410ms
[29.523s][info][gc,start    ] GC(35) Concurrent strong roots
[29.523s][info][gc,task     ] GC(35) Using 4 of 8 workers for concurrent strong root
[29.523s][info][gc          ] GC(35) Concurrent strong roots 0.054ms
[29.523s][info][gc,start    ] GC(35) Concurrent evacuation
[29.523s][info][gc,task     ] GC(35) Using 4 of 8 workers for concurrent evacuation
[29.526s][info][gc          ] GC(35) Concurrent evacuation 2.122ms
[29.526s][info][gc,start    ] GC(35) Pause Init Update Refs
[29.526s][info][gc,ergo     ] GC(35) Pacer for Update Refs. Used: 1696M, Free: 175M, Non-Taxable: 17996K, Alloc Tax Rate: 11.8x
[29.526s][info][gc          ] GC(35) Pause Init Update Refs 0.025ms
[29.526s][info][gc,start    ] GC(35) Concurrent update references
[29.526s][info][gc,task     ] GC(35) Using 4 of 8 workers for concurrent reference update
[29.564s][info][gc          ] GC(35) Concurrent update references 38.480ms
[29.564s][info][gc,start    ] GC(35) Concurrent update thread roots
[29.565s][info][gc          ] GC(35) Concurrent update thread roots 0.274ms
[29.565s][info][gc,start    ] GC(35) Pause Final Update Refs
[29.565s][info][gc,task     ] GC(35) Using 8 of 8 workers for final reference update
[29.565s][info][gc          ] GC(35) Pause Final Update Refs 0.211ms
[29.565s][info][gc,start    ] GC(35) Concurrent cleanup
[29.565s][info][gc          ] GC(35) Concurrent cleanup 1696M->1677M(1955M) 0.203ms
[29.565s][info][gc,ergo     ] Free: 178M, Max: 512K regular, 58368K humongous, Frag: 68% external, 2% internal; Reserve: 100352K, Max: 512K
[29.565s][info][gc,stats    ] 
[29.565s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[29.565s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[29.565s][info][gc,stats    ] 
[29.565s][info][gc,stats    ] Concurrent Reset                   3759 us
[29.565s][info][gc,stats    ] Pause Init Mark (G)                 448 us
[29.565s][info][gc,stats    ] Pause Init Mark (N)                 199 us
[29.565s][info][gc,stats    ]   Update Region States              112 us
[29.565s][info][gc,stats    ] Concurrent Mark Roots               258 us, parallelism: 0.99x
[29.565s][info][gc,stats    ]   CMR: <total>                      256 us
[29.565s][info][gc,stats    ]   CMR: Thread Roots                 219 us, workers (us):  66, 103,  50,   0, ---, ---, ---, ---, 
[29.565s][info][gc,stats    ]   CMR: VM Strong Roots                4 us, workers (us):   3,   0,   0,   0, ---, ---, ---, ---, 
[29.565s][info][gc,stats    ]   CMR: CLDG Roots                    34 us, workers (us):  31,   3, ---, ---, ---, ---, ---, ---, 
[29.565s][info][gc,stats    ] Concurrent Marking               274124 us
[29.565s][info][gc,stats    ] Pause Final Mark (G)                949 us
[29.565s][info][gc,stats    ] Pause Final Mark (N)                820 us
[29.565s][info][gc,stats    ]   Finish Mark                       376 us
[29.565s][info][gc,stats    ]   Update Region States               86 us
[29.565s][info][gc,stats    ]   Choose Collection Set             263 us
[29.565s][info][gc,stats    ]   Rebuild Free Set                   16 us
[29.565s][info][gc,stats    ] Concurrent Thread Roots             292 us, parallelism: 0.91x
[29.565s][info][gc,stats    ]   CTR: <total>                      265 us
[29.565s][info][gc,stats    ]   CTR: Thread Roots                 265 us, workers (us): 115,  59,  36,  56, ---, ---, ---, ---, 
[29.565s][info][gc,stats    ] Concurrent Weak References          122 us, parallelism: 0.08x
[29.565s][info][gc,stats    ]   CWRF: <total>                      10 us
[29.565s][info][gc,stats    ]   CWRF: Weak References              10 us, workers (us):  10,   0,   0,   0, ---, ---, ---, ---, 
[29.565s][info][gc,stats    ] Concurrent Weak Roots               285 us
[29.565s][info][gc,stats    ]   Roots                             165 us, parallelism: 1.52x
[29.565s][info][gc,stats    ]     CWR: <total>                    250 us
[29.565s][info][gc,stats    ]     CWR: Code Cache Roots           192 us, workers (us):  68,  56,  69,   0, ---, ---, ---, ---, 
[29.565s][info][gc,stats    ]     CWR: VM Weak Roots               30 us, workers (us):  19,   9,   1,   0, ---, ---, ---, ---, 
[29.565s][info][gc,stats    ]     CWR: CLDG Roots                  28 us, workers (us): ---,  28, ---, ---, ---, ---, ---, ---, 
[29.565s][info][gc,stats    ]   Rendezvous                         59 us
[29.565s][info][gc,stats    ] Concurrent Cleanup                  225 us
[29.565s][info][gc,stats    ] Concurrent Class Unloading          451 us
[29.565s][info][gc,stats    ]   Unlink Stale                      285 us
[29.565s][info][gc,stats    ]     System Dictionary                 8 us
[29.565s][info][gc,stats    ]     Weak Class Links                  0 us
[29.565s][info][gc,stats    ]     Code Roots                      276 us
[29.565s][info][gc,stats    ]   Rendezvous                         58 us
[29.565s][info][gc,stats    ]   Purge Unlinked                     58 us
[29.565s][info][gc,stats    ]     Code Roots                       44 us
[29.565s][info][gc,stats    ]     CLDG                             14 us
[29.565s][info][gc,stats    ]     Exception Caches                  0 us
[29.565s][info][gc,stats    ] Concurrent Strong Roots              92 us, parallelism: 0.23x
[29.565s][info][gc,stats    ]   CSR: <total>                       21 us
[29.565s][info][gc,stats    ]   CSR: VM Strong Roots                2 us, workers (us):   1,   0,   0,   0, ---, ---, ---, ---, 
[29.565s][info][gc,stats    ]   CSR: CLDG Roots                    19 us, workers (us):  17,   2, ---, ---, ---, ---, ---, ---, 
[29.565s][info][gc,stats    ] Concurrent Evacuation              2157 us
[29.565s][info][gc,stats    ] Pause Init Update Refs (G)          201 us
[29.565s][info][gc,stats    ] Pause Init Update Refs (N)           32 us
[29.565s][info][gc,stats    ]   Manage GCLABs                       2 us
[29.565s][info][gc,stats    ] Concurrent Update Refs            38566 us
[29.565s][info][gc,stats    ] Concurrent Update Thread Roots      324 us
[29.565s][info][gc,stats    ] Pause Final Update Refs (G)         423 us
[29.565s][info][gc,stats    ] Pause Final Update Refs (N)         276 us
[29.565s][info][gc,stats    ]   Update Region States              164 us
[29.565s][info][gc,stats    ]   Trash Collection Set                5 us
[29.565s][info][gc,stats    ]   Rebuild Free Set                   25 us
[29.565s][info][gc,stats    ] Concurrent Cleanup                  241 us
[29.565s][info][gc,stats    ] 
[29.565s][info][gc,stats    ] Allocation pacing accrued:
[29.565s][info][gc,stats    ]       0 of   324 ms (  0.0%): <total>
[29.565s][info][gc,stats    ]       0 of   324 ms (  0.0%): <average total>
[29.565s][info][gc,stats    ] 
[29.565s][info][gc,metaspace] Metaspace: 8290K(8512K)->8290K(8512K) NonClass: 7528K(7680K)->7528K(7680K) Class: 762K(832K)->762K(832K)
[29.565s][info][gc,ergo     ] Pacer for Idle. Initial: 40038K, Alloc Tax Rate: 1.0x
[29.567s][info][gc          ] Trigger: Free (178M) is below minimum threshold (195M)
[29.567s][info][gc,ergo     ] Free: 178M, Max: 512K regular, 58368K humongous, Frag: 68% external, 2% internal; Reserve: 100352K, Max: 512K
[29.567s][info][gc,start    ] GC(36) Concurrent reset
[29.567s][info][gc,task     ] GC(36) Using 4 of 8 workers for concurrent reset
[29.567s][info][gc,ergo     ] GC(36) Pacer for Reset. Non-Taxable: 1955M
[29.570s][info][gc          ] GC(36) Concurrent reset 3.309ms
[29.570s][info][gc,start    ] GC(36) Pause Init Mark (unload classes)
[29.570s][info][gc,task     ] GC(36) Using 8 of 8 workers for init marking
[29.570s][info][gc,ergo     ] GC(36) Pacer for Mark. Expected Live: 1528M, Free: 178M, Non-Taxable: 18281K, Alloc Tax Rate: 10.5x
[29.570s][info][gc          ] GC(36) Pause Init Mark (unload classes) 0.176ms
[29.570s][info][gc,start    ] GC(36) Concurrent marking roots
[29.570s][info][gc,task     ] GC(36) Using 4 of 8 workers for concurrent marking roots
[29.571s][info][gc          ] GC(36) Concurrent marking roots 0.254ms
[29.571s][info][gc,start    ] GC(36) Concurrent marking (unload classes)
[29.571s][info][gc,task     ] GC(36) Using 4 of 8 workers for concurrent marking
Live objects in old region: 1391450
[29.675s][info][gc          ] Cancelling GC: Stopping VM
[29.676s][info][gc          ] GC(36) Concurrent marking (unload classes) 104.810ms
[29.676s][info][gc,ergo     ] Free: 177M, Max: 512K regular, 58368K humongous, Frag: 68% external, 2% internal; Reserve: 100352K, Max: 512K
[29.676s][info][gc,stats    ] 
[29.676s][info][gc,stats    ] All times are wall-clock times, except per-root-class counters, that are sum over
[29.676s][info][gc,stats    ] all workers. Dividing the <total> over the root stage time estimates parallelism.
[29.676s][info][gc,stats    ] 
[29.676s][info][gc,stats    ] Concurrent Reset                   3379 us
[29.676s][info][gc,stats    ] Pause Init Mark (G)                 339 us
[29.676s][info][gc,stats    ] Pause Init Mark (N)                 189 us
[29.676s][info][gc,stats    ]   Update Region States              122 us
[29.676s][info][gc,stats    ] Concurrent Mark Roots               304 us, parallelism: 0.87x
[29.676s][info][gc,stats    ]   CMR: <total>                      265 us
[29.676s][info][gc,stats    ]   CMR: Thread Roots                 234 us, workers (us):  89, 103,  41,   0, ---, ---, ---, ---, 
[29.676s][info][gc,stats    ]   CMR: VM Strong Roots                3 us, workers (us):   2,   0,   0,   0, ---, ---, ---, ---, 
[29.676s][info][gc,stats    ]   CMR: CLDG Roots                    28 us, workers (us):  28, ---, ---, ---, ---, ---, ---, ---, 
[29.676s][info][gc,stats    ] 
[29.676s][info][gc,stats    ] Allocation pacing accrued:
[29.676s][info][gc,stats    ]       0 of   110 ms (  0.0%): <total>
[29.676s][info][gc,stats    ]       0 of   110 ms (  0.0%): <average total>
[29.676s][info][gc,stats    ] 
[29.676s][info][gc,metaspace] Metaspace: 8290K(8512K)->8309K(8512K) NonClass: 7528K(7680K)->7543K(7680K) Class: 762K(832K)->765K(832K)
[29.676s][info][gc,ergo     ] Pacer for Idle. Initial: 40038K, Alloc Tax Rate: 1.0x
[29.677s][info][gc,heap,exit] Heap
[29.677s][info][gc,heap,exit] Shenandoah Heap
[29.677s][info][gc,heap,exit]  1955M max, 1955M soft max, 1955M committed, 1678M used
[29.677s][info][gc,heap,exit]  3910 x 512K regions
[29.677s][info][gc,heap,exit] Status: marking, cancelled
[29.677s][info][gc,heap,exit] Reserved region:
[29.677s][info][gc,heap,exit]  - [0x0000000085d00000, 0x0000000100000000) 
[29.677s][info][gc,heap,exit] Collection set:
[29.677s][info][gc,heap,exit]  - map (vanilla): 0x00000000000110ba
[29.677s][info][gc,heap,exit]  - map (biased):  0x0000000000010000
[29.677s][info][gc,heap,exit] 
[29.677s][info][gc,heap,exit]  Metaspace       used 8309K, committed 8512K, reserved 1114112K
[29.677s][info][gc,heap,exit]   class space    used 765K, committed 832K, reserved 1048576K
[29.677s][info][gc,stats    ] 
[29.677s][info][gc,stats    ] GC STATISTICS:
[29.677s][info][gc,stats    ]   "(G)" (gross) pauses include VM time: time to notify and block threads, do the pre-
[29.677s][info][gc,stats    ]         and post-safepoint housekeeping. Use -Xlog:safepoint+stats to dissect.
[29.677s][info][gc,stats    ]   "(N)" (net) pauses are the times spent in the actual GC code.
[29.677s][info][gc,stats    ]   "a" is average time for each phase, look at levels to see if average makes sense.
[29.677s][info][gc,stats    ]   "lvls" are quantiles: 0% (minimum), 25%, 50% (median), 75%, 100% (maximum).
[29.677s][info][gc,stats    ] 
[29.677s][info][gc,stats    ]   All times are wall-clock times, except per-root-class counters, that are sum over
[29.677s][info][gc,stats    ]   all workers. Dividing the <total> over the root stage time estimates parallelism.
[29.677s][info][gc,stats    ] 
[29.677s][info][gc,stats    ]   Pacing delays are measured from entering the pacing code till exiting it. Therefore,
[29.677s][info][gc,stats    ]   observed pacing delays may be higher than the threshold when paced thread spent more
[29.677s][info][gc,stats    ]   time in the pacing code. It usually happens when thread is de-scheduled while paced,
[29.677s][info][gc,stats    ]   OS takes longer to unblock the thread, or JVM experiences an STW pause.
[29.677s][info][gc,stats    ] 
[29.677s][info][gc,stats    ]   Higher delay would prevent application outpacing the GC, but it will hide the GC latencies
[29.677s][info][gc,stats    ]   from the STW pause times. Pacing affects the individual threads, and so it would also be
[29.677s][info][gc,stats    ]   invisible to the usual profiling tools, but would add up to end-to-end application latency.
[29.677s][info][gc,stats    ]   Raise max pacing delay with care.
[29.677s][info][gc,stats    ] 
[29.677s][info][gc,stats    ] Concurrent Reset               =    0.122 s (a =     3292 us) (n =    37) (lvls, us =     1035,     3164,     3379,     3730,     4735)
[29.677s][info][gc,stats    ] Pause Init Mark (G)            =    0.020 s (a =      534 us) (n =    37) (lvls, us =      307,      369,      484,      604,     1256)
[29.677s][info][gc,stats    ] Pause Init Mark (N)            =    0.010 s (a =      260 us) (n =    37) (lvls, us =      156,      178,      191,      246,      955)
[29.677s][info][gc,stats    ]   Update Region States         =    0.005 s (a =      141 us) (n =    37) (lvls, us =       70,      102,      119,      148,      326)
[29.677s][info][gc,stats    ] Concurrent Mark Roots          =    0.012 s (a =      333 us) (n =    37) (lvls, us =      213,      260,      312,      381,      499)
[29.677s][info][gc,stats    ]   CMR: <total>                 =    0.010 s (a =      280 us) (n =    37) (lvls, us =      203,      227,      264,      299,      666)
[29.677s][info][gc,stats    ]   CMR: Thread Roots            =    0.008 s (a =      224 us) (n =    37) (lvls, us =      166,      188,      213,      244,      326)
[29.677s][info][gc,stats    ]   CMR: VM Strong Roots         =    0.000 s (a =        9 us) (n =    37) (lvls, us =        3,        3,        4,        4,      170)
[29.677s][info][gc,stats    ]   CMR: CLDG Roots              =    0.002 s (a =       47 us) (n =    37) (lvls, us =       27,       30,       35,       50,      204)
[29.677s][info][gc,stats    ] Concurrent Marking             =    7.575 s (a =   210422 us) (n =    36) (lvls, us =    58984,   203125,   220703,   242188,   327373)
[29.677s][info][gc,stats    ] Pause Final Mark (G)           =    0.057 s (a =     1593 us) (n =    36) (lvls, us =      643,      996,     1152,     1367,    15984)
[29.677s][info][gc,stats    ] Pause Final Mark (N)           =    0.035 s (a =      972 us) (n =    36) (lvls, us =      561,      838,      943,     1055,     1451)
[29.677s][info][gc,stats    ]   Finish Mark                  =    0.017 s (a =      480 us) (n =    36) (lvls, us =      256,      352,      469,      549,      871)
[29.677s][info][gc,stats    ]   Update Region States         =    0.004 s (a =      123 us) (n =    36) (lvls, us =       86,       98,      111,      123,      258)
[29.677s][info][gc,stats    ]   Choose Collection Set        =    0.009 s (a =      263 us) (n =    36) (lvls, us =      113,      252,      271,      289,      421)
[29.677s][info][gc,stats    ]   Rebuild Free Set             =    0.001 s (a =       19 us) (n =    36) (lvls, us =       12,       16,       18,       21,       38)
[29.677s][info][gc,stats    ] Concurrent Thread Roots        =    0.011 s (a =      312 us) (n =    36) (lvls, us =      195,      225,      270,      365,      922)
[29.677s][info][gc,stats    ]   CTR: <total>                 =    0.009 s (a =      245 us) (n =    36) (lvls, us =      156,      203,      227,      260,      699)
[29.677s][info][gc,stats    ]   CTR: Thread Roots            =    0.009 s (a =      245 us) (n =    36) (lvls, us =      156,      203,      227,      260,      699)
[29.677s][info][gc,stats    ] Concurrent Weak References     =    0.006 s (a =      161 us) (n =    36) (lvls, us =       84,      104,      127,      178,      333)
[29.677s][info][gc,stats    ]   CWRF: <total>                =    0.001 s (a =       18 us) (n =    36) (lvls, us =        4,        8,       13,       18,       99)
[29.677s][info][gc,stats    ]   CWRF: Weak References        =    0.001 s (a =       18 us) (n =    36) (lvls, us =        4,        8,       13,       18,       99)
[29.677s][info][gc,stats    ] Concurrent Weak Roots          =    0.013 s (a =      372 us) (n =    36) (lvls, us =      256,      281,      361,      451,      599)
[29.677s][info][gc,stats    ]   Roots                        =    0.008 s (a =      221 us) (n =    36) (lvls, us =      150,      172,      197,      242,      412)
[29.677s][info][gc,stats    ]     CWR: <total>               =    0.012 s (a =      338 us) (n =    36) (lvls, us =      211,      258,      295,      369,      968)
[29.677s][info][gc,stats    ]     CWR: Code Cache Roots      =    0.009 s (a =      259 us) (n =    36) (lvls, us =      156,      191,      232,      268,      809)
[29.677s][info][gc,stats    ]     CWR: VM Weak Roots         =    0.002 s (a =       61 us) (n =    36) (lvls, us =       30,       38,       43,       68,      219)
[29.677s][info][gc,stats    ]     CWR: CLDG Roots            =    0.001 s (a =       18 us) (n =    36) (lvls, us =       10,       11,       12,       19,       49)
[29.677s][info][gc,stats    ]   Rendezvous                   =    0.003 s (a =       92 us) (n =    36) (lvls, us =       44,       55,       61,      117,      233)
[29.677s][info][gc,stats    ] Concurrent Cleanup             =    0.009 s (a =      242 us) (n =    36) (lvls, us =      182,      205,      221,      240,      786)
[29.677s][info][gc,stats    ] Concurrent Class Unloading     =    0.021 s (a =      596 us) (n =    36) (lvls, us =      416,      475,      545,      641,     1814)
[29.677s][info][gc,stats    ]   Unlink Stale                 =    0.014 s (a =      375 us) (n =    36) (lvls, us =      270,      303,      355,      396,     1158)
[29.677s][info][gc,stats    ]     System Dictionary          =    0.000 s (a =        8 us) (n =    36) (lvls, us =        5,        6,        7,        9,       26)
[29.677s][info][gc,stats    ]     Weak Class Links           =    0.000 s (a =        0 us) (n =    36) (lvls, us =        0,        0,        0,        0,        1)
[29.677s][info][gc,stats    ]     Code Roots                 =    0.013 s (a =      366 us) (n =    36) (lvls, us =      264,      293,      348,      391,     1129)
[29.677s][info][gc,stats    ]   Rendezvous                   =    0.003 s (a =       88 us) (n =    36) (lvls, us =       42,       49,       58,      111,      326)
[29.677s][info][gc,stats    ]   Purge Unlinked               =    0.003 s (a =       83 us) (n =    36) (lvls, us =       48,       62,       73,       93,      261)
[29.677s][info][gc,stats    ]     Code Roots                 =    0.002 s (a =       69 us) (n =    36) (lvls, us =       40,       46,       55,       81,      252)
[29.677s][info][gc,stats    ]     CLDG                       =    0.000 s (a =       14 us) (n =    36) (lvls, us =        2,       12,       12,       13,       30)
[29.677s][info][gc,stats    ]     Exception Caches           =    0.000 s (a =        1 us) (n =    36) (lvls, us =        0,        0,        0,        0,       15)
[29.677s][info][gc,stats    ] Concurrent Strong Roots        =    0.005 s (a =      149 us) (n =    36) (lvls, us =       82,      109,      129,      168,      509)
[29.677s][info][gc,stats    ]   CSR: <total>                 =    0.001 s (a =       40 us) (n =    36) (lvls, us =       18,       23,       27,       38,      300)
[29.677s][info][gc,stats    ]   CSR: VM Strong Roots         =    0.000 s (a =        3 us) (n =    36) (lvls, us =        1,        2,        2,        2,       31)
[29.677s][info][gc,stats    ]   CSR: CLDG Roots              =    0.001 s (a =       36 us) (n =    36) (lvls, us =       16,       21,       26,       36,      269)
[29.677s][info][gc,stats    ] Concurrent Evacuation          =    0.373 s (a =    10359 us) (n =    36) (lvls, us =      117,     2148,     7559,    11914,    47033)
[29.677s][info][gc,stats    ] Pause Init Update Refs (G)     =    0.010 s (a =      288 us) (n =    36) (lvls, us =       98,      209,      268,      357,      490)
[29.677s][info][gc,stats    ] Pause Init Update Refs (N)     =    0.002 s (a =       61 us) (n =    36) (lvls, us =       30,       44,       57,       72,      107)
[29.677s][info][gc,stats    ]   Manage GCLABs                =    0.000 s (a =        3 us) (n =    36) (lvls, us =        2,        2,        3,        4,       18)
[29.677s][info][gc,stats    ] Concurrent Update Refs         =    1.433 s (a =    39819 us) (n =    36) (lvls, us =    13672,    35938,    42188,    45703,    53371)
[29.677s][info][gc,stats    ] Concurrent Update Thread Roots =    0.013 s (a =      373 us) (n =    36) (lvls, us =      254,      307,      354,      438,      529)
[29.677s][info][gc,stats    ] Pause Final Update Refs (G)    =    0.017 s (a =      471 us) (n =    36) (lvls, us =      283,      342,      422,      561,      947)
[29.677s][info][gc,stats    ] Pause Final Update Refs (N)    =    0.010 s (a =      285 us) (n =    36) (lvls, us =      195,      242,      266,      301,      720)
[29.677s][info][gc,stats    ]   Update Region States         =    0.006 s (a =      153 us) (n =    36) (lvls, us =       70,      121,      141,      162,      464)
[29.677s][info][gc,stats    ]   Trash Collection Set         =    0.000 s (a =        8 us) (n =    36) (lvls, us =        2,        4,        7,        8,       29)
[29.677s][info][gc,stats    ]   Rebuild Free Set             =    0.001 s (a =       36 us) (n =    36) (lvls, us =       21,       29,       32,       40,       82)
[29.677s][info][gc,stats    ] Concurrent Cleanup             =    0.011 s (a =      300 us) (n =    36) (lvls, us =      213,      234,      256,      289,     1348)
[29.677s][info][gc,stats    ] 
[29.677s][info][gc,stats    ] 
[29.677s][info][gc,stats    ] Under allocation pressure, concurrent cycles may cancel, and either continue cycle
[29.677s][info][gc,stats    ] under stop-the-world pause or result in stop-the-world Full GC. Increase heap size,
[29.677s][info][gc,stats    ] tune GC heuristics, set more aggressive pacing delay, or lower allocation rate
[29.677s][info][gc,stats    ] to avoid Degenerated and Full GC cycles.
[29.677s][info][gc,stats    ] 
[29.677s][info][gc,stats    ]    36 successful concurrent GCs
[29.677s][info][gc,stats    ]       0 invoked explicitly
[29.677s][info][gc,stats    ]       0 invoked implicitly
[29.677s][info][gc,stats    ] 
[29.677s][info][gc,stats    ]     0 Degenerated GCs
[29.677s][info][gc,stats    ]       0 caused by allocation failure
[29.677s][info][gc,stats    ]       0 upgraded to Full GC
[29.677s][info][gc,stats    ] 
[29.677s][info][gc,stats    ]     0 Full GCs
[29.677s][info][gc,stats    ]       0 invoked explicitly
[29.677s][info][gc,stats    ]       0 invoked implicitly
[29.677s][info][gc,stats    ]       0 caused by allocation failure
[29.677s][info][gc,stats    ]       0 upgraded from Degenerated GC
[29.677s][info][gc,stats    ] 
[29.677s][info][gc,stats    ] 
----------System.err:(1/15)----------
STATUS:Passed.
----------rerun:(34/2111)*----------
cd /home/webliu/TencentKona-17/JTwork/scratch && \\
DISPLAY=:0 \\
HOME=/home/webliu \\
JTREG_HOME=/home/webliu/jtreg/build/images/jtreg \\
LANG=C.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
WAYLAND_DISPLAY=wayland-0 \\
XDG_RUNTIME_DIR=/mnt/wslg/runtime-dir \\
CLASSPATH=/home/webliu/TencentKona-17/JTwork/classes/gc/LRUCacheTest.d:/home/webliu/TencentKona-17/test/hotspot/jtreg/gc:/home/webliu/TencentKona-17/JTwork/classes/test/lib:/home/webliu/TencentKona-17/test/lib:/home/webliu/jtreg/build/images/jtreg/lib/javatest.jar:/home/webliu/jtreg/build/images/jtreg/lib/jtreg.jar \\
    /home/webliu/TencentKona-17/build/linux-x86_64-server-release/jdk/bin/java \\
        -Dtest.vm.opts= \\
        -Dtest.tool.vm.opts= \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts= \\
        -Dtest.jdk=/home/webliu/TencentKona-17/build/linux-x86_64-server-release/jdk \\
        -Dcompile.jdk=/home/webliu/TencentKona-17/build/linux-x86_64-server-release/jdk \\
        -Dtest.timeout.factor=1.0 \\
        -Dtest.root=/home/webliu/TencentKona-17/test/hotspot/jtreg \\
        -Dtest.name=gc/LRUCacheTest.java \\
        -Dtest.file=/home/webliu/TencentKona-17/test/hotspot/jtreg/gc/LRUCacheTest.java \\
        -Dtest.src=/home/webliu/TencentKona-17/test/hotspot/jtreg/gc \\
        -Dtest.src.path=/home/webliu/TencentKona-17/test/hotspot/jtreg/gc:/home/webliu/TencentKona-17/test/lib \\
        -Dtest.classes=/home/webliu/TencentKona-17/JTwork/classes/gc/LRUCacheTest.d \\
        -Dtest.class.path=/home/webliu/TencentKona-17/JTwork/classes/gc/LRUCacheTest.d:/home/webliu/TencentKona-17/JTwork/classes/test/lib \\
        -Dtest.modules='java.base/jdk.internal.misc java.management' \\
        --add-modules java.base,java.management \\
        --add-exports java.base/jdk.internal.misc=ALL-UNNAMED \\
        -Xbootclasspath/a:. \\
        -XX:+UnlockDiagnosticVMOptions \\
        -XX:+WhiteBoxAPI \\
        -XX:+UseShenandoahGC \\
        -Xlog:gc* \\
        -Xlog:gc:shenandoah_gc.log \\
        com.sun.javatest.regtest.agent.MainWrapper /home/webliu/TencentKona-17/JTwork/gc/LRUCacheTest.d/main.2.jta
result: Passed. Execution successful


test result: Passed. Execution successful
